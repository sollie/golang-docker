name: 'build package'

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
    paths-ignore:
    - '.github/workflows/**'

env:
  VERSIONS_URL: "https://go.dev/dl/?mode=json&include=all"
  VERSIONS_JSON: "/tmp/versions.json"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Tag
        id: tag
        if: "startsWith(github.ref, 'refs/tags/v')"
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}

      - name: Short tag
        id: short
        if: "startsWith(github.ref, 'refs/tags/v')"
        run: |
          SHORT_TAG=$(echo ${{ steps.tag.outputs.tag }} | cut -f1-2 -d'.')
          echo ::set-output name=tag::$SHORT_TAG

      - name: Fetch available versions
        id: available-versions
        run: |
          wget -nc -O ${{ env.VERSIONS_JSON }} ${{ env.VERSIONS_URL }}
          echo ::set-output name=sha256::$(jq '.[]| select((.version == "go${{ steps.tag.outputs.tag }}")).files[] | select((.os == "linux") and (.arch == "amd64") and (.kind == "archive"))| {sha256}' ${{ env.VERSIONS_JSON }} | tr -d "{}"| sed '/^$/d'|tr -d " "| cut -f2 -d":")
          echo ::set-output name=filename::$(jq '.[]| select((.version == "go${{ steps.tag.outputs.tag }}")).files[] | select((.os == "linux") and (.arch == "amd64") and (.kind == "archive"))| {filename}' ${{ env.VERSIONS_JSON }} | tr -d "{}"| sed '/^$/d'|tr -d " "| cut -f2 -d":")
          echo "${{ steps.available-versions.outputs.sha256}} - ${{ steps.available-versions.outputs.filename}}"

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check if latest
        id: check-latest
        run: |
          echo ::set-output name=latest::$(cat ${GITHUB_WORKSPACE}/.github/.latest)
          echo ::set-output name=current::$(echo "go${{ steps.tag.outputs.tagÂ }}")

      - name: Set up Docker Buildx
        id:   buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      - name: Build and Push Docker Image - with latest
        uses: docker/build-push-action@v2
        if: ${{ steps.check-latest.outputs.latest == steps.check-latest.outputs.current }}
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64
          build-args: |
            GO_VERSION=${{ steps.short.outputs.tag }}
            FILENAME=${{ steps.available-versions.outputs.filename }}
            SHA256=${{ steps.available-versions.outputs.sha256 }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.tag.outputs.tag }}
            ghcr.io/${{ github.repository }}:${{ steps.short.outputs.tag }}
            ghcr.io/${{ github.repository }}:latest

      - name: Build and Push Docker Image - without latest
        uses: docker/build-push-action@v2
        if: ${{ steps.check-latest.outputs.latest != steps.tag.outputs.tag }}
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64
          build-args: |
            GO_VERSION=${{ steps.short.outputs.tag }}
            FILENAME=${{ steps.available-versions.outputs.filename }}
            SHA256=${{ steps.available-versions.outputs.sha256 }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.tag.outputs.tag }}
            ghcr.io/${{ github.repository }}:${{ steps.short.outputs.tag }}
